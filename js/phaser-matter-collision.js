!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("phaser")):"function"==typeof define&&define.amd?define(["phaser"],t):"object"==typeof exports?exports.PhaserMatterCollisionPlugin=t(require("phaser")):e.PhaserMatterCollisionPlugin=t(e.Phaser)}("undefined"!=typeof self?self:this,(function(e){return(()=>{"use strict";var t={445:t=>{t.exports=e}},i={};function s(e){var o=i[e];if(void 0!==o)return o.exports;var n=i[e]={exports:{}};return t[e](n,n.exports,s),n.exports}s.d=(e,t)=>{for(var i in t)s.o(t,i)&&!s.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};return(()=>{s.r(o),s.d(o,{PhaserMatterCollisionPlugin:()=>m,default:()=>O,getRootBody:()=>i,isCollidingObject:()=>c,isMatterBody:()=>l});var e=s(445);const t={log:console.log,warn:console.warn,error:console.error};function i(e){for(;e.parent!==e;)e=e.parent;return e}function n(e){t.warn(`Expected a Matter body, a Tile, a GameObject, a Sprite, an Image, a TileBody, or an object with a body property, but instead, received: ${e}`)}var r=e.Tilemaps.Tile;function l(e){return e.hasOwnProperty("parts")&&e.hasOwnProperty("slop")&&e.hasOwnProperty("gameObject")}function c(e){return l(e)||e.body||e instanceof r}var a=e.Physics.Matter;const{START:d,DESTROY:h,SHUTDOWN:v}=e.Scenes.Events,{COLLISION_START:u,COLLISION_ACTIVE:b,COLLISION_END:f}=a.Events;class m extends e.Plugins.ScenePlugin{constructor(t,i,s){super(t,i,s),this.scene=t,this.pluginManager=i,this.events=new e.Events.EventEmitter,this.collisionStartListeners=new Map,this.collisionEndListeners=new Map,this.collisionActiveListeners=new Map,this.scene=t,this.scene.events.once(d,this.start,this),this.scene.events.once(h,this.destroy,this)}addOnCollideStart(e){return this.addOnCollide(this.collisionStartListeners,e),()=>this.removeOnCollide(this.collisionStartListeners,e)}addOnCollideEnd(e){return this.addOnCollide(this.collisionEndListeners,e),()=>this.removeOnCollide(this.collisionEndListeners,e)}addOnCollideActive(e){return this.addOnCollide(this.collisionActiveListeners,e),()=>this.removeOnCollide(this.collisionActiveListeners,e)}removeOnCollideStart(e){this.removeOnCollide(this.collisionStartListeners,e)}removeOnCollideEnd(e){this.removeOnCollide(this.collisionEndListeners,e)}removeOnCollideActive(e){this.removeOnCollide(this.collisionActiveListeners,e)}removeAllCollideStartListeners(){this.collisionStartListeners.clear()}removeAllCollideActiveListeners(){this.collisionActiveListeners.clear()}removeAllCollideEndListeners(){this.collisionEndListeners.clear()}removeAllCollideListeners(){this.removeAllCollideStartListeners(),this.removeAllCollideActiveListeners(),this.removeAllCollideEndListeners()}addOnCollide(e,i){const{context:s,callback:o,objectA:n,objectB:r}=i;if(!o||"function"!=typeof o)return void t.warn(`No valid callback specified. Received: ${o}`);const l=Array.isArray(n)?n:[n],c=Array.isArray(r)?r:[r];l.forEach((t=>{c.forEach((i=>{this.addOnCollideObjectVsObject(e,t,i,o,s)}))}))}removeOnCollide(e,t){const{context:i,callback:s,objectA:o,objectB:n}=t,r=Array.isArray(o)?o:[o],l=Array.isArray(n)?n:[n];r.forEach((t=>{const o=(e.get(t)||[]).filter((e=>void 0!==i&&e.context!==i||void 0!==s&&e.callback!==s||void 0!==n&&!l.includes(e.target)));o.length>0?e.set(t,o):e.delete(t)}))}addOnCollideObjectVsObject(e,t,i,s,o){if(!t||!c(t))return void n(t);if(i&&!c(i))return void n(t);const r=e.get(t)||[];r.push({target:i,callback:s,context:o}),e.set(t,r)}onCollisionStart(e){this.onCollisionEvent(this.collisionStartListeners,u,e)}onCollisionEnd(e){this.onCollisionEvent(this.collisionEndListeners,f,e)}onCollisionActive(e){this.onCollisionEvent(this.collisionActiveListeners,b,e)}onCollisionEvent(e,t,s){const o=s.pairs,n="pair"+t,r={isReversed:!1},l={isReversed:!0};o.map(((t,s)=>{var c,d;const{bodyA:h,bodyB:v}=t,u=i(h),b=i(v);let f=null!==(c=u.gameObject)&&void 0!==c?c:void 0,m=null!==(d=b.gameObject)&&void 0!==d?d:void 0;if(f&&f instanceof a.TileBody&&(f=f.tile),m&&m instanceof a.TileBody&&(m=m.tile),o[s].gameObjectA=null!=f?f:void 0,o[s].gameObjectB=null!=m?m:void 0,r.bodyA=h,r.bodyB=v,r.gameObjectA=null!=f?f:void 0,r.gameObjectB=null!=m?m:void 0,r.pair=t,this.events.emit(n,r),e.size>0){l.bodyB=h,l.bodyA=v,l.gameObjectB=f,l.gameObjectA=m,l.pair=t;const i=r,s=l;this.checkPairAndEmit(e,h,v,m,i),this.checkPairAndEmit(e,v,h,f,s),f&&this.checkPairAndEmit(e,f,v,m,i),m&&this.checkPairAndEmit(e,m,h,f,s)}})),this.events.emit(t,s)}checkPairAndEmit(e,t,i,s,o){const n=e.get(t);n&&n.forEach((({target:e,callback:t,context:n})=>{e&&e!==i&&e!==s||t.call(n,o)}))}subscribeMatterEvents(){const e=this.scene.matter;e&&e.world?(e.world.on(u,this.onCollisionStart,this),e.world.on(b,this.onCollisionActive,this),e.world.on(f,this.onCollisionEnd,this)):t.warn("Plugin requires matter!")}unsubscribeMatterEvents(){const e=this.scene.matter;e&&e.world&&(e.world.off(u,this.onCollisionStart,this),e.world.off(b,this.onCollisionActive,this),e.world.off(f,this.onCollisionEnd,this))}start(){this.scene.events.off(v,this.shutdown,this),this.scene.events.on(v,this.shutdown,this),this.subscribeMatterEvents()}shutdown(){this.removeAllCollideListeners(),this.unsubscribeMatterEvents(),this.scene.events.once(d,this.start,this)}destroy(){this.scene.events.off(h,this.destroy,this),this.scene.events.off(d,this.start,this),this.scene.events.off(v,this.shutdown,this),this.removeAllCollideListeners(),this.unsubscribeMatterEvents()}}const O=m})(),o})()}));
//# sourceMappingURL=phaser-matter-collision.js.map